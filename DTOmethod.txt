public List<DeptDTO> getDTOList(){//먼저 연습하고 Map을 연습 할것
		System.out.println("제네릭 타입을 getter/setter로 처리할때");
		List<DeptDTO> list = new ArrayList<>();
		StringBuilder sql = new StringBuilder();
		sql.append("SELECT deptno, dname, loc FROM dept");//4건 모두 조회함 10,20,30,40
		sql.append("select empno, ename, sal, dname ");
		sql.append("from emp, dept                  ");
		sql.append("where emp.deptno = dept.deptno  ");
		try {
			//아래 코드에서 NullPointerException이 발생 했다면 생성자에서 객체 주입이 안됨
			//dbMgr.코드에서 직접적인 원인이 있음
			//DBConnectionMgr이 생성되어야 getConnection메소드를 호출할 수 있을 것이고
			//호출이 되어야 리턴값으로 Connection 객체를 주입 받음
			con = dbMgr.getConnection();//con으로 호출되는 데이터베이스
			pstmt = con.prepareStatement(sql.toString());
			rs = pstmt.executeQuery();
			DeptDTO dto = null;
			while(rs.next()) {
				//아래 코드에서 반복문이 실행될 때마다 서로 다른 주소번지가 4개 만들어지니까
				//문제점: deptDTO는 테이블 dept를 클래스로 설계한 것
				dto = new DeptDTO(rs.getInt("deptno"), rs.getString("dname"),rs.getString("loc"));
				//아래 코드를 작성하지 않으면 4개의 정보가 모두 유지되지 않음
				list.add(dto);//0, null, null, 0 ,null, null, 0,null, null, 0 , null,null
			}
			System.out.println(list);
			//자바를 통해서 DB연동한 후에 후처리하기(자바컬렉션 프레임워크를 JSON포맷으로 변경함)
			//Gson g = new Gson();브라우저를 통해서 출력할 때만 사용하면 된다. - JSON포맷이어야 javascript에서 꺼내기가 가능함
			//String temp = g.toJson(list);
		} catch (SQLException se) {
			System.out.println(se.toString());//부적합한 식별자  - 컬럼명이 존재하지 않을 때 - SQLException해당됨
		} catch (Exception e) {
			e.printStackTrace();//stack메모리에 쌓여있는 에러 메시지 히스토리를 볼 수  있다.(라인번호와 함께 메시지 출력됨)
		}
		return list;
	}
